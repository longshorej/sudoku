package info.longshore.sudoku.gui;

import info.longshore.sudoku.domain.ConstraintPuzzle;
import info.longshore.sudoku.domain.ConstraintPuzzleCollection;
import info.longshore.sudoku.domain.ConstraintPuzzleRating;
import info.longshore.sudoku.domain.Difficulty;

import java.util.ArrayList;
import java.util.Set;

public class ConstraintPuzzleCollectionPanel extends javax.swing.JPanel {

  /**
   * Creates new form ConstraintPuzzleCollectionPanel
   */
  public ConstraintPuzzleCollectionPanel(ConstraintPuzzleCollection cpc) {
    puzzlePanels = new ArrayList<ConstraintPuzzlePanel>();
    col = cpc;
    activePanelHasBeenAdded = false;
    initComponents();

    setSize(600, 400);

    ratingPane.setVisible(false);
    jButton1.setVisible(false);
    jButton2.setVisible(false);
    syncPanels();
  }

  public ConstraintPuzzleCollection getCollection() {
    return col;
  }


  private void changeActivePanel(int newPanelNumber) {
    if (newPanelNumber >= 0 && puzzlePanels.size() > newPanelNumber) {
      if (activePanelHasBeenAdded) {
        remove(activePanel);
        activePanelHasBeenAdded = false;
      }

      activePanel = puzzlePanels.get(newPanelNumber);

      activePanelNumber = newPanelNumber;


      add(activePanel);

      activePanelHasBeenAdded = true;

      ConstraintPuzzleRating rating = activePanel.getPuzzle().getRating();
      String ratingText = "Rating: " + Difficulty.getText(rating.getDifficulty());

      Set<String> moveNames = rating.getMoveNames();

      if (moveNames.size() > 0) {
        ratingText += "\n\nMoves:\n";

        for (String moveName : rating.getMoveNames()) {
          ratingText += moveName + ": " + rating.getMovesUsed(moveName) + "\n";
        }
      }


      ratingPane.setText(ratingText);


      repaint();
    }
  }

  public void syncPanels() {
    if (puzzlePanels.size() != col.getPuzzles().size()) {
      puzzlePanels = new ArrayList<ConstraintPuzzlePanel>();

      for (ConstraintPuzzle x : col.getPuzzles()) {
        ConstraintPuzzlePanel cpp = new ConstraintPuzzlePanel(x);
        puzzlePanels.add(cpp);
      }
    }

    changeActivePanel(0);

    if (puzzlePanels.size() > 0) {
      jButton1.setVisible(true);
      jButton2.setVisible(true);
      noPuzzlesJLabel.setVisible(false);
      ratingPane.setVisible(true);
    } else {
      jButton1.setVisible(false);
      jButton2.setVisible(false);
      noPuzzlesJLabel.setVisible(true);
      ratingPane.setVisible(false);
    }

  }

  /**
   * This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jButton1 = new javax.swing.JButton();
    jButton2 = new javax.swing.JButton();
    noPuzzlesJLabel = new javax.swing.JLabel();
    jScrollPane1 = new javax.swing.JScrollPane();
    ratingPane = new javax.swing.JTextPane();

    org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(info.longshore.sudoku.gui.SudokuApplication.class).getContext().getResourceMap(ConstraintPuzzleCollectionPanel.class);
    setBackground(resourceMap.getColor("Form.background")); // NOI18N
    setName("Form"); // NOI18N

    jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
    jButton1.setName("jButton1"); // NOI18N
    jButton1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton1ActionPerformed(evt);
      }
    });

    javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(info.longshore.sudoku.gui.SudokuApplication.class).getContext().getActionMap(ConstraintPuzzleCollectionPanel.class, this);
    jButton2.setAction(actionMap.get("jButton2ActionPerformed")); // NOI18N
    jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
    jButton2.setName("jButton2"); // NOI18N

    noPuzzlesJLabel.setText(resourceMap.getString("noPuzzlesJLabel.text")); // NOI18N
    noPuzzlesJLabel.setName("noPuzzlesJLabel"); // NOI18N

    jScrollPane1.setName("jScrollPane1"); // NOI18N

    ratingPane.setBorder(null);
    ratingPane.setEditable(false);
    ratingPane.setFocusable(false);
    ratingPane.setName("ratingPane"); // NOI18N
    ratingPane.setOpaque(false);
    ratingPane.setVerifyInputWhenFocusTarget(false);
    jScrollPane1.setViewportView(ratingPane);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
          .addContainerGap()
          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
              .addComponent(noPuzzlesJLabel)
              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 236, Short.MAX_VALUE)
              .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING)))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
          .addGap(11, 11, 11)
          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
              .addComponent(jButton1)
              .addGap(1, 1, 1)
              .addComponent(jButton2))
            .addComponent(noPuzzlesJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGap(36, 36, 36)
          .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addContainerGap(105, Short.MAX_VALUE))
    );
  }// </editor-fold>//GEN-END:initComponents

  private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    this.changeActivePanel(activePanelNumber - 1);
  }//GEN-LAST:event_jButton1ActionPerformed

  @org.jdesktop.application.Action
  public void jButton2ActionPerformed() {
    this.changeActivePanel(activePanelNumber + 1);
  }

  private ArrayList<ConstraintPuzzlePanel> puzzlePanels;

  private ConstraintPuzzlePanel activePanel;
  private boolean activePanelHasBeenAdded;

  private int activePanelNumber = 0;

  private ConstraintPuzzleCollection col;
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton jButton1;
  private javax.swing.JButton jButton2;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JLabel noPuzzlesJLabel;
  private javax.swing.JTextPane ratingPane;
  // End of variables declaration//GEN-END:variables

}
